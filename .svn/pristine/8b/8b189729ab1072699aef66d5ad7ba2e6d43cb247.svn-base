import { OnInit, EventEmitter, Renderer2, AfterViewInit, QueryList, ElementRef } from '@angular/core';
import { CalendarEvent } from '../../interfaces/calendar-event.interface';
import { MdbCalendarOptions } from '../../interfaces/calendar-options.interface';
export declare class MdbCalendarMonthViewComponent implements OnInit, AfterViewInit {
    private renderer;
    days: QueryList<ElementRef>;
    get events(): CalendarEvent[];
    set events(events: CalendarEvent[]);
    private _events;
    weekDaysShort: string[];
    months: string[];
    weekDayIndex: number;
    options: MdbCalendarOptions;
    dayClicked: EventEmitter<any>;
    eventClicked: EventEmitter<any>;
    viewChanged: EventEmitter<string>;
    monthChanged: EventEmitter<any>;
    selectedMonth: number;
    selectedYear: number;
    selectionStartDate: Date;
    selectionEndDate: Date;
    allCells: HTMLElement[];
    dates: any[];
    dragStart: any;
    isDragging: boolean;
    dragEnd: any;
    constructor(renderer: Renderer2);
    ngOnInit(): void;
    ngAfterViewInit(): void;
    trackByFn(index: any): any;
    trackByEvent(index: any, item: any): any;
    trackByDay(index: any, item: any): any;
    onMouseDown(event: any, day: any): void;
    onMouseUp(event: any, day: any): void;
    selectRange(): void;
    clearSelection(): void;
    onMouseMove(event: any): void;
    onDayClick(day: any): void;
    onEventClick(event: CalendarEvent): void;
    onViewChange(view: string): void;
    next(): void;
    previous(): void;
    goToToday(): void;
    getDaysInPreviousMonth(year: number, month: number): number;
    createMonthView(year: number, month: number): void;
}
