import { Component, OnInit } from '@angular/core';
import { GenericService } from 'src/app/services/generic.service';
import { Router, ActivatedRoute } from '@angular/router';
import { Seller } from '../seller.model';
import { MatTableDataSource } from '@angular/material/table';
import { Table } from 'src/app/Base/Table';

import { ToastService, MDBModalService, MDBModalRef, ModalDirective } from 'ng-uikit-pro-standard';
import { CommonService } from '../../../../Base/Common.service';

import { SPOperationsService } from 'src/app/services/spoperations.service';
import { LoginUser } from 'src/app/Base/User/login-user';
import { Autocomplete } from 'src/app/Base/Autocomplete';

@Component({
  selector: 'app-sellerlist',
  templateUrl: './sellerlist.component.html',
  styleUrls: ['./sellerlist.component.scss']
})

  export class SellerlistComponent extends Table implements OnInit {
    displayedColumns: string[] = ['actions', 'Title', 'JobTitle',  'Email', 'Contact'];
    
  
  
  
  
    jobTitle:string = "";
    filterText:string = "";
    constructor(
      public service: SPOperationsService,     
       public router: Router,
       public modalService: MDBModalService,
       public common:CommonService,
       public route: ActivatedRoute,
    ) { 
      super(router);
      this.common.hideGlobalSearch = true;
    }
  
    ngOnInit(): void {  
        this.getSellerData();    
    }
  
    getSellerData(){
  
      this.common.ShowSpinner();
  
      var filter = "";
      this.filterText = "";
  
  
    
  
      if (this.jobTitle != "" && this.jobTitle != undefined && this.jobTitle != null) {
        if (filter != "")
          filter += "and"
  
        filter += " JobTitle eq '" + this.jobTitle + "'";
  
        if(this.filterText == "")
          this.filterText += "Filtered by: ";     
        else
          this.filterText += " & ";     
  
        this.filterText += "Job Title = " + this.jobTitle; 
      }
  
    
      const query = {
        //select: 'CategoryId, ID, Title, LastName, Company0, JobTitle, Address, Email, Contact, Website, Modified, Editor/Title, Category/Title, Author/ID, Region/Title',     
        select: 'ID, Title, LastName, JobTitle, Email, Contact',// ,Industry/ID, Industry/Title, Specialty/ID, Specialty/Title, State/ID, State/Title',     
        expand: '',//, Industry, Specialty, State',
        filter: filter,
        orderby:'JobTitle,Title asc'      
        
      };
  
  
      this.service.readItems("Seller" ,query).then(res => {
        this.common.HideSpinner()
        this.listData = new MatTableDataSource(res['d'].results  as Seller[]);
        this.listData.sort = this.sort;
        this.listData.paginator = this.paginator;   
  
        // if (this.parent == 'contactcategories') {
        //   if (this.CategoryID > 0)
        //     this.setheading(res['d'].results.length > 0 ? res['d'].results[0].Category.Title : ''); //this.headingName  = res['d'].results.length > 0 ? res['d'].results[0].Category.Title : '';
        // }
        
      });
    }
  
  }
